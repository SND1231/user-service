version: 2.1

jobs:
  test:
    machine: true
    steps:
      - checkout
      - run:
          name: create docker network
          command: docker network create app_network
      - run:
          name: dockerize install
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: docker-compose up
          command: |
            set -x
            docker-compose up --build -d
      - run:
          name: docker-compose stop
          command: |
            set -x
            docker-compose stop
      - run:
          name: docker-compose up
          command: |
            set -x
            docker-compose up -d
      - run: dockerize -wait tcp://127.0.0.1:13306 -timeout 120s
      - run:
          name: migration
          command: docker-compose exec user go run migration/migration.go
      - run:
          name: testing
          command: docker-compose exec user make

  image-push:
    machine: true
    steps:
      - checkout
      - run:
          name: Build
          command: docker-compose build
      - run:
          name: Tag to latest
          command: docker tag project_user:latest ${DOCKER_USER}/user:latest
      - run:
          name: Docker Login
          command: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
      - run:
          name: Push image to registory
          command: docker push ${DOCKER_USER}/user
workflows:
  version: 2.1
  build-test-and-deploy:
    jobs:
      - test
      - image-push:
          context: ramen_app
          requires:
            - test
